---

- name: Configure Mongo
  hosts: mongo
  become: True
  become_method: sudo
  gather_facts: True
  roles:
    - mongo_3_2

- name: Configure shared services (es, memcached, rabbitmq)
  hosts: services
  become: True
  become_method: sudo
  gather_facts: True
  vars:
    appsembler_roles: "../../appsembler-roles"
  roles:
    - { role: swapfile, SWAPFILE_SIZE: "4GB" }
    - role: sudo
    - edxapp_common
    - edx_ansible
    - role: "{{ appsembler_roles }}/gcsfuse"
    - oraclejdk
    - elasticsearch
    - memcached
    - role: "{{ appsembler_roles }}/cert_agent"
    - role: "{{ appsembler_roles }}/google-fluentd"
    - { role: 'rabbitmq', rabbitmq_ip: '0.0.0.0' }

- name: Deploy edxapp workers
  hosts: workers
  become: True
  become_method: sudo
  gather_facts: True
  vars:
    appsembler_roles: "../../appsembler-roles"
  roles:
    - role: sudo
    - role: aws
    - mysql_init
    - role: mysql
    - role: edxapp
      celery_worker: True
    - role: "{{ appsembler_roles }}/google-fluentd"

- name: Configure app server instance(s)
  hosts: edx
  become: True
  become_method: sudo
  gather_facts: True
  vars:
    appsembler_roles: "../../appsembler-roles"
    migrate_db: "yes"
    openid_workaround: True
    EDXAPP_LMS_NGINX_PORT: '80'
    # Set to false if deployed behind another proxy/load balancer.
    NGINX_SET_X_FORWARDED_HEADERS: True
  roles:
    - { role: swapfile, SWAPFILE_SIZE: "2GB" }
    - role: sudo
    - role: aws
    - mysql_init
    - role: mysql
      when: EDXAPP_MYSQL_HOST == 'localhost'
    - role: mongo_3_2
      when: "'localhost' in EDXAPP_MONGO_HOSTS"
    - edxapp
    - custom_domains # This gets a list of custom domains
    - role: "{{ appsembler_roles }}/gcsfuse"
    - role: nginx
      nginx_sites:
      - cms
      - lms
      - health-check
      nginx_default_sites:
      - lms
    - role: "{{ appsembler_roles }}/fix_dir_perms"
    - amc
    - role: credentials
      when: TAHOE_CREDENTIALS_ENABLE|default(false)
      tags: credentials_role
    #- analytics_api
    #- insights
    #- demo
    - oauth_client_setup
    - { role: "{{ appsembler_roles }}/letsencrypt", letsencrypt_run: false }
    - role: "{{ appsembler_roles }}/google-fluentd"

- name: Deploy forum
  hosts: forum
  become: True
  gather_facts: True
  vars:
    appsembler_roles: "../../appsembler-roles"
  roles:
    - role: sudo
    - role: aws
    - role: nginx
      nginx_sites:
      - forum
    - forum
    - role: "{{ appsembler_roles }}/google-fluentd"

# TODO: Fix the notifier. It's breaking the Ansible deployments. See RED-133
#- name: Install xqueue and notifier on services node
#  hosts: "services"
#  become: True
#  become_method: sudo
#  gather_facts: True
#  vars:
#    appsembler_roles: "../../appsembler-roles"
#    migrate_db: "yes"
#  roles:
#    - mysql_init
#    - edxapp_common
#    - role: nginx
#      nginx_sites:
#      - xqueue
#    - { role: notifier, NOTIFIER_DIGEST_TASK_INTERVAL: "5" }
#    - { role: "xqueue", update_users: True }
#    - role: custom_domains # This gets the list of domains
#      when: nginx_enable_custom_domains|default(False)
#    - { role: "{{ appsembler_roles }}/letsencrypt", letsencrypt_webserver: "" }
