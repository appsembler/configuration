---

- name: Install dependencies for using Google Cloud Storage
  apt: name={{ item }}
  with_items:
    - gcc
    - python-dev
    - python-setuptools
    - libffi-dev
    - libssl-dev
  when: TRACKING_LOGS_STORAGE_PROVIDER == 'gs'
  tags: ['tracking_logs_sync']

- name: Install Python packages required for tracking logs sync on GCP Cloud Storage
  pip: name={{ item.name }} version={{ item.version }}
  with_items:
    - {name: gcs-oauth2-boto-plugin, version: 1.9}
    - {name: oauth2client, version: 1.5.2}
    - {name: pyopenssl, version: 0.15.1}
    - {name: cryptography, version: 1.4}
  when: TRACKING_LOGS_STORAGE_PROVIDER == 'gs'
  tags: ['tracking_logs_sync']

- name: Install raven package for Sentry alerts
  pip: name=raven version="6.9.0"
  tags: ['tracking_logs_sync']

- name: Copy boto configuration
  template: src=insights-boto.j2 dest="{{ TRACKING_LOGS_GS_BOTO_FILE }}" owner=root group=root mode=0600
  when: TRACKING_LOGS_STORAGE_PROVIDER == 'gs'
  tags: ['tracking_logs_sync']

- name: Copy base64-encoded credentials for insights service account
  copy: content="{{ TRACKING_LOGS_GS_SERVICE_KEY_CONTENTS }}" dest="{{ TRACKING_LOGS_GS_SERVICE_KEY_FILE }}.b64" owner=root group=root mode=0600
  when: TRACKING_LOGS_STORAGE_PROVIDER == 'gs'
  tags: ['tracking_logs_sync']

- name: Decode credentials file for insights service account
  shell: base64 -d "{{ TRACKING_LOGS_GS_SERVICE_KEY_FILE }}.b64" > "{{ TRACKING_LOGS_GS_SERVICE_KEY_FILE }}"
  when: TRACKING_LOGS_STORAGE_PROVIDER == 'gs'
  tags: ['tracking_logs_sync']

- name: Copy sync tracking logs script
  copy: src=copy_tracking_logs.py dest=/usr/local/bin/copy_tracking_logs owner=root group=root mode=0700
  tags: ['tracking_logs_sync']

- name: Create cron job for copy tracking logs
  cron:
    name="Copy Tracking Logs"
    cron_file=run_copy_tracking_logs
    user=root
    job="/usr/local/bin/copy_tracking_logs"
    minute=00
    hour=23
  when: TRACKING_LOGS_STORAGE_PROVIDER == 'gs'
  tags: ['tracking_logs_sync']

- name: Configure settings copy tracking logs
  lineinfile: >
    dest=/etc/cron.d/run_copy_tracking_logs
    regexp="^{{ item.key }}="
    line="{{ item.key }}={{ item.value }}"
    state=present
    insertbefore=BOF
  with_dict:
    TRACKING_LOGS_BUCKET: '{{ TRACKING_LOGS_BUCKET }}'
    TRACKING_LOGS_STORAGE_PROVIDER: '{{ TRACKING_LOGS_STORAGE_PROVIDER }}'
    TRACKING_LOGS_SENTRY_DSN: '{{ TRACKING_LOGS_SENTRY_DSN }}'
    TRACKING_LOGS_MULTIPLE_EDXAPP_VM: '{{ TRACKING_LOGS_MULTIPLE_EDXAPP_VM }}'
    BOTO_CONFIG: '{{ TRACKING_LOGS_GS_BOTO_FILE }}'
  when: TRACKING_LOGS_STORAGE_PROVIDER and "{{ item.value }}" != ""
  tags: ['tracking_logs_sync']
