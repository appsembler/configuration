"""
gunicorn configuration file: http://docs.gunicorn.org/en/develop/configure.html

{{ ansible_managed }}
"""
import logging
import os
import multiprocessing

preload_app = False
timeout = {{ EDXAPP_LMS_GUNICORN_TIMEOUT }}
bind = "{{ edxapp_lms_gunicorn_host }}:{{ edxapp_lms_gunicorn_port }}"
pythonpath = "{{ edxapp_code_dir }}"

{% if EDXAPP_LMS_MAX_REQ -%}
max_requests = {{ EDXAPP_LMS_MAX_REQ }}
{% endif -%}

{% if EDXAPP_WORKERS %}
workers = {{ EDXAPP_WORKERS.lms }}
{% else %}
workers = (multiprocessing.cpu_count()-1) * {{ worker_core_mult.lms }} + {{ worker_core_mult.lms }}
{% endif %}

{{ common_close_all_caches }}

def post_fork(server, worker):
    close_all_caches()


def post_worker_init(worker):
    try:
        import beeline
    except ImportError:
        # beeline library isn't installed,
        return
    logging.info('beeline initialization in process pid {}'.format(os.getpid()))
    if os.environ.get('HONEYCOMB_WRITEKEY'):
        beeline.init(
            writekey=os.environ['HONEYCOMB_WRITEKEY'],
            dataset=os.environ['HONEYCOMB_DATASET'],
            service_name='lms')

{{ EDXAPP_LMS_GUNICORN_EXTRA_CONF }}
